---
title: "שימוש במאונים"
description: |
  שימוש במאונים להבנת פיזור הנתונים
author: ""
date: "2024-05-04"
toc: true
categories: [בסיסי]
image: featured.png
draft: true
filters:
  - interactive-sql
databases:
  - name: percentiles_q9
    path: "https://raw.githubusercontent.com/AmitLevinson/sql-website/main/questions/9-Percentiles/q9.sql"
    
---

```{r, include = FALSE}
library(odbc)
library(DBI)

sqlconn <- dbConnect(odbc(),
                      Driver = "SQL Server",
                      Server = "localhost\\SQLEXPRESS",
                      Database = "q-9")

```

ברוכים הבאים לתרגיל התשיעי!  

בתרגיל(ים) הבאים נתרגל קצת חישוב מאונים. למי שלא מכיר/משתמש, שווה להכניס מאונים/עשירונים/רבעונים לארגז הכלים כאמצעי לבחינה של פיזור הדאטה, בייחוד כשיש ערכים קיצוניים.

## הדאטה

טבלה ראשונה מכילה אינדיקציה האם הלקוח סגור או לא (0 לא סגור, 1 סגור):

```{sql connection='sqlconn'}
SELECT TOP 5 * 
FROM users;
```

טבלה שניה מכילה תשלומים של היוזרים השונים:

```{sql connection='sqlconn'}
SELECT TOP 5 * 
FROM payments;
```


## שאלה 1

מצאו את התשלום החציוני של שתי קבוצות המשתמשים השונות -- אלה החסומים ואלה שאינם.

שאלת בונוס: מה הממוצע של כל קבוצה? מתוך שני המדדים האלה, איך נניח שנראית התפלגות הסכומים של כל אחת מהקבוצות?

## שאלה 2

צרו טבלת מאונים לעמודת תשלומים (ללא קשר לקבוצות בשאלה הקודמת). כלומר, הציגו את התשלום במאון ה-1%, 2% $...$  100% בדרך שתיהיה נוחה לכם לפרשנות.

שאלת בונוס: איך תפרשו את הערכים? מה זה אומר המאון ה-70%?


## נסו בעצמכם

### אונליין 

<mark>נסו בחלון טקסט למטה (SQLite):</mark>

*שאלה ראשונה פחות ממולצת לפתירה כאן (SQLite) אלא ב-RDBMS שלכם*

```{.sql .interactive .percentiles_q9}
-- EDIT THIS QUERY:
SELECT *
FROM Payments
-- LEFT JOIN Users using(user_id)
LIMIT 10;

-- Median:
(SELECT amount
FROM PAyments
ORDER BY amount
LIMIT 1
OFFSET (SELECT COUNT(*)
        FROM Payments) / 2)

```


### נסו על המחשב שלכם

<details>
<summary>הצג קוד ליצירת טבלה</summary>

```{sql, eval=  FALSE, attr.source='style="max-height: 250px;overflow: scroll;"', connection='sqlconn'}


```

</details>

## תשובות

### סרטון הסבר


{{< video https://youtu.be/grncXOd5fhE >}}


### תשובה 1

<details>

<summary>הצג פתרון</summary>

**T-SQL**

```{sql connection='sqlconn', echo = TRUE}
SELECT DISTINCT CLOSED,
AVG(AMOUNT) OVER(Partition by Closed) as Average_Amount,
PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) OVER(partition by closed) AS Median_amount
FROM payments p
LEFT JOIN Users u on p.user_id = u.user_id;

```

</details>


### תשובה 2

<details>

<summary>הצג פתרון</summary>

**T-SQL**, (מראה רק את ה-10 שורות הראשונות)

```{sql connection='sqlconn', echo = TRUE, eval= TRUE}
WITH AMOUNT_DIST AS (
SELECT 
FLOOR (cume_dist() over (ORDER BY AMOUNT) * 100) AS PERCENTILE,
AMOUNT
FROM Payments
)

SELECT PERCENTILE,
	MAX(AMOUNT) AS HIGHEST_AMOUNT_FOR_PERCENTILE
FROM AMOUNT_dist
GROUP BY PERCENTILE
```

</details>

```{r echo = FALSE}
dbDisconnect(sqlconn)
```
