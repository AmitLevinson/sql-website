---
title: "דירוג שורות בלי פונקצית חלון"
description: |
  יצירת דירוג שורות בתוך קבוצה בלי שימוש בפונקציית חלון
author: ""
date: "2023-08-01"
toc: true
categories: [מתקדם]
image: featured.png
draft: true
---

```{r, include = FALSE}
library(odbc)
library(DBI)

sqlconn <- dbConnect(odbc(),
                      Driver = "SQL Server",
                      Server = "localhost\\SQLEXPRESS",
                      Database = "sql-questions")

```



ברוכים הבאים לתרגיל השלישי!

## הדאטה

האמת זו לא ממש שאלה שנדרשתי לה בעבודה אלא שאלה שעלתה בקבוצות פייסבוק לאנליסטים ואיציק בן גן דן בה גם בספר שלו [על פונקציות חלון](https://www.amazon.com/T-SQL-Window-Functions-Developer-Reference/dp/0135861446).

 אומנם ברוב הגדול של הפעמים תוכלו להשתמש בפונקצית חלון, התרגול דורש מאיתנו לחשוב מה קורה בפונקציית דירוג וכך לשחזר אותה רק בלי להשתמש בפונקציית חלון

## שאלה

ללא שימוש בפונקצית חלון, צור עמודה חדשה שמדרגת את השורות לפי מכירות באותה שנה (לפי amount), בדומה לפונקציית [`DESNE_RANK()`](https://learn.microsoft.com/en-us/sql/t-sql/functions/dense-rank-transact-sql?view=sql-server-ver16).
כלומר, בהינתן תיקו בהיררכיה, ערכים זהים יקבלו את אותו דירוג ואילו הערכים הבאים בסדר יקבלו ערך אחד מעל הערך הקודם שהיה בתיקו.

**בהצלחה!**

## יצירת הטבלה

```{r, eval=  FALSE, attr.source='style="max-height: 200px;overflow: scroll;"', connection='sqlconn'}

DROP TABLE IF EXISTS Sales_ag;

CREATE TABLE sales_ag (
	year INT,
	category varchar(15),
	amount INT
)


INSERT into Sales_ag (year, category, amount) values (2000, 'Automotive', 89);
insert into Sales_ag (year, category, amount) values (2000, 'Computers', 59);
insert into Sales_ag (year, category, amount) values (2000, 'Books', 19);
insert into Sales_ag (year, category, amount) values (2000, 'Movies', 74);
insert into Sales_ag (year, category, amount) values (2000, 'Garden', 74);
insert into Sales_ag (year, category, amount) values (2001, 'Clothing', 49);
insert into Sales_ag (year, category, amount) values (2001, 'Computers', 53);
insert into Sales_ag (year, category, amount) values (2001, 'Automotive', 65);
insert into Sales_ag (year, category, amount) values (2001, 'Garden', 24);
insert into Sales_ag (year, category, amount) values (2001, 'Movies', 39);
```


## תשובה

דרך הפתרון תפורסם עם השאלה הבאה

### 1.

```{r, echo = FALSE, warning = FALSE, message = FALSE}
library(dplyr)
library(gt)

# dat <- read.csv('questions/3-ranking-without-window-function/sales_ag.csv')

dat <- read.csv('sales_ag.csv')

dat %>% 
  group_by(sale_year) %>% 
  arrange(amount) %>% 
  mutate(custom_dense_rank = dense_rank(desc(amount))) %>% 
  ungroup() %>% 
  arrange(sale_year, custom_dense_rank) %>% 
  select(custom_dense_rank, amount, category, sale_year ) %>% 
  gt()
```



```{sql connection='sqlconn', echo = FALSE, eval = FALSE}
SELECT *,
	(SELECT COUNT(DISTINCT SalesInner.amount) as rn
	FROM sales_ag SalesInner
	WHERE SalesInner.year = SalesOuter.year
		AND SalesInner.amount >= SalesOuter.amount)  AS custom_dense_rank
FROM sales_ag SalesOuter
ORDER BY year, custom_dense_rank
```

```{r echo = FALSE}
dbDisconnect(sqlconn)
```
