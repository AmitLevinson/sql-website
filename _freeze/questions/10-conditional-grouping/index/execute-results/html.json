{
  "hash": "45ab49d0127a3155e04b93a3ca1b0f7a",
  "result": {
    "markdown": "---\ntitle: \"עמודות מותנות\"\ndescription: |\n  אגרגציה לפי מגוון עמודות\nauthor: \"\"\ndate: \"2025-01-22\"\ntoc: true\ncategories: [בסיסי]\nimage: featured.png\ndraft: true\nfilters:\n  - interactive-sql\ndatabases:\n  - name: conditional_grouping_q10\n    path: \"https://raw.githubusercontent.com/AmitLevinson/sql-website/main/questions/10-conditional-grouping/q10.sql\"\n    \n---\n\n\n\n\nברוכים הבאים לתרגיל העשירי!  \n\nבתרגיל הבא נתרגל לקיחה של ערכים מעמודות לפי תנאי. זה תאור קצת כללי לתרגיל (עם 2 השאלות), אבל זה בגדול מה שהיה לי בראש כשניסיתי לתאר את האתגרים שאני מנסה לשתף פה.\n\n\n## שאלה 1\n\n### הדאטה\n\nהגעתם למקום שעוד לא יצר תהליכי ETL מוסדרים ולכן אתם בעיקר עובדים עם דאטה מ-[OLTP](https://en.wikipedia.org/wiki/Online_transaction_processing). \n\nלמטה תוכלו לראות דיאגרמת ישויות קשרים של הטבלאות ואת השם של כל אחת מעליה (עם מפתח מחבר של Payment_id). בגדול יש לנו טבלת משלמים ואילו המקבלים השונים וגובה הסכום פזורים בטבלאות שונות.\n\n::: {style=\"text-align:center;\"}\n\n![](q10_erd.png)\n\n:::\n\n\nצרו פלט שיציג את היוזר המשלם, היוזר המקבל וכמה הוא קיבל סה\"כ מאותו משלם, ללא קשר לסוג התשלום. שימו לב כי ישנם תשלומים בלי מידע על סוג התשלום (התעלמו מהם)\n\n## תרגיל 2\n\nפה כבר יש לנו את טבלת התשלומים המלאה:\n\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT  *\nFROM q10_payments\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: Displaying records 1 - 10\n\n| payer| receiver| payment_id|Transaction_date | Amount|\n|-----:|--------:|----------:|:----------------|------:|\n|    14|        7|          1|2020-06-30       |     45|\n|    14|        7|          2|2020-07-28       |     17|\n|    14|        7|          3|2020-07-29       |     24|\n|     1|        7|          4|2020-08-27       |      4|\n|     1|        7|          5|2020-08-28       |     89|\n|     6|        7|          6|2020-08-29       |     26|\n|     6|        7|          7|2020-08-30       |     47|\n|     7|       21|          8|2020-08-31       |     42|\n|     7|       21|          9|2020-09-01       |     52|\n|     3|        1|         10|2020-09-04       |     31|\n\n</div>\n:::\n\n\n\n\nאנחנו מעוניינים ליצור טבלת מידע על כל המשלמים ומקבלי התשלום.\n\nלשם כך, הדפיסו טבלה שתציג לנו עמודת יוזר מקור, עמודת יוזר רפרנס, כמה תשלומים היוזר רפרנס קיבל מהמקור, כמה תשלומים היוזר רפרנס שלח למקור ומה היה התאריך האחרון שנשלח ביניהם תשלום (לא משנה הכיוון). יוזר רפרנס הוא כל יוזר שהיה לו קשר כלשהו - כמשלם או מקבל - ליוזר המקור שלנו. \n\nאנחנו רוצים שכל משתמש ייחודי בטבלה (משלם/מקבל) יופיע כיוזר מקור\n\n## נסו בעצמכם\n\n### אונליין \n\n<mark>נסו בחלון טקסט למטה (SQLite):</mark>\n\n\n```{.sql .interactive .conditional_grouping_q10}\n/* For Q1:\n-- SELECT * FROM Q10_PAYERS\n-- SELECT * FROM Cash\n-- SELECT * FROM Bit\n-- SELECT * FROM Checks\n*/\n\n-- Q2:\n-- SELECT * FROM q10_payments\n\n\n\n\n\n\n\n```\n\n\n### נסו על המחשב שלכם\n\n<details>\n<summary>הצג קוד ליצירת טבלה</summary>\n\n\n::: {.cell}\n\n```{.sql .cell-code style=\"max-height: 250px;overflow: scroll;\"}\n\nCREATE TABLE q10_payers (\n    payment_id\tINT,\n    payer \tINT\n);\n\nINSERT INTO q10_payers (payment_id, payer ) VALUES\n\t('1', '14 '),\n\t('2', '14 '),\n\t('3', '14 '),\n\t('4', '1 '),\n\t('5', '1 '),\n\t('6', '6 '),\n\t('7', '6 '),\n\t('8', '7 '),\n\t('9', '7 '),\n\t('10', '3 '),\n\t('11', '3 '),\n\t('12', '3 '),\n\t('13', '3 '),\n\t('14', '7 '),\n\t('15', '7 '),\n\t('16', '7 '),\n\t('17', '4 '),\n\t('18', '12 '),\n\t('19', '12 '),\n\t('20', '12 ');\n\n\tCREATE TABLE Cash (\n    receiver\tINT,\n    payment_id\tINT,\n    Amount \tINT\n);\n\nINSERT INTO Cash (payment_id, receiver,  Amount ) VALUES\n\t('1', '7', '45 '),\n\t('4', '1', '4 '),\n\t('13','3',  '84 '),\n\t('18','7',  '94 '),\n\t('19','7',  '25 '),\n\t('20','7',  '80 ');\n\n\n\tCREATE TABLE Bit (\n    receiver\tINT,\n    payment_id\tINT,\n    amount \tINT\n);\n\nINSERT INTO Bit (payment_id, receiver, amount ) VALUES\n\t('2', '7', '17 '),\n\t('5', '7', '89 '),\n\t('10','1',  '31 '),\n\t('14','22', '23 '),\n\t('16','22', '63 '),\n\t('17','7',  '75 ');\n\n\tCREATE TABLE checks (\n    receiver\tINT,\n    payment_id\tINT,\n    amount \tINT\n);\n\nINSERT INTO Checks (payment_id, receiver, amount ) VALUES\n\t('7', '7', '47 '),\n\t('8', '21','42 '),\n\t('15','22', '1 '),\n\t('6', '7', '26 ');\n\n\nCREATE TABLE q10_payments (\n    payer\tINT,\n    receiver\tINT,\n    payment_id\tINT,\n    Transaction_date\tDATE,\n    Amount \tINT\n);\n\nINSERT INTO q10_payments (payer, receiver, payment_id, Transaction_date, Amount ) VALUES\n\t('14', '7', '1', '2020-06-30', '45'),\n\t('14', '7', '2', '2020-07-28', '17'),\n\t('14', '7', '3', '2020-07-29', '24'),\n\t('1', '7', '4', '2020-08-27', '4'),\n\t('1', '7', '5', '2020-08-28', '89'),\n\t('6', '7', '6', '2020-08-29', '26'),\n\t('6', '7', '7', '2020-08-30', '47'),\n\t('7', '21', '8', '2020-08-31', '42'),\n\t('7', '21', '9', '2020-09-01', '52'),\n\t('3', '1', '10', '2020-09-04', '31'),\n\t('3', '1', '11', '2020-09-05', '92'),\n\t('3', '1', '12', '2020-09-06', '54'),\n\t('3', '1', '13', '2020-09-07', '84'),\n\t('7', '22', '14', '2020-09-08', '23'),\n\t('7', '22', '15', '2020-09-09', '1'),\n\t('7', '22', '16', '2020-09-10', '63'),\n\t('4', '7', '17', '2021-05-28', '75'),\n\t('12', '7', '18', '2021-06-30', '94'),\n\t('12', '7', '19', '2021-07-28', '25'),\n\t('12', '7', '20', '2021-07-29', '80');\n\n```\n:::\n\n\n</details>\n\n## תשובות\n\n### סרטון הסבר\n\n\n{{< video https://youtu.be/iZZ0Bw4ZjFM >}}\n\n\n\n### תשובה 1\n\n<details>\n\n<summary>הצג פתרון</summary>\n\n**T-SQL**\n\n\n::: {.cell}\n\n```{.sql .cell-code}\n--\n```\n:::\n\n\n</details>\n\n\n### תשובה 2\n\n<details>\n\n<summary>הצג פתרון</summary>\n\n**T-SQL**, (מראה רק את ה-10 שורות הראשונות)\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT  *\nFROM q10_payments\n\n```\n\n\n<div class=\"knitsql-table\">\n\n\nTable: Displaying records 1 - 10\n\n| payer| receiver| payment_id|Transaction_date | Amount|\n|-----:|--------:|----------:|:----------------|------:|\n|    14|        7|          1|2020-06-30       |     45|\n|    14|        7|          2|2020-07-28       |     17|\n|    14|        7|          3|2020-07-29       |     24|\n|     1|        7|          4|2020-08-27       |      4|\n|     1|        7|          5|2020-08-28       |     89|\n|     6|        7|          6|2020-08-29       |     26|\n|     6|        7|          7|2020-08-30       |     47|\n|     7|       21|          8|2020-08-31       |     42|\n|     7|       21|          9|2020-09-01       |     52|\n|     3|        1|         10|2020-09-04       |     31|\n\n</div>\n:::\n\n\n</details>\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}