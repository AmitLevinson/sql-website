[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "אודותיי",
    "section": "",
    "text": "היי!\nאני עמית, דאטה אנליסט בחברת פיוניר ובכללי בתחום הדאטה כבר כמה שנים. את האתרון הזה החלטתי לפתוח כשהבנתי שאני אוהב לשתף דברים מגניבים שיצא לי לפתור בעבודה, אבל הבנתי שאין לי יותר מדי עם מי בצורה קלה. ולכן במקום לנסות למצוא אנשים ספציפיים שאחפור להם, החלטתי להנגיש את זה לכולם. חוץ מזה, התחשק לי לפרסם קצת תוכן על דאטה בעברית, אז עוד סיבה לפתיחה שלו.\nזהו, מוזמנים להגיד שלום/הערות/בקשות באחד מהקישורים מטה =&gt;"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "מקבץ תרגילים ממקרים שהיו",
    "section": "",
    "text": "הירשמו וקבלו עידכונים על תרגילים חדשים\n        \n            \n            \n        \n    \n        \n            \n                \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nאפיון תשלומים זהים או שונים\n\n\n\n\n\n\n\nבסיסי\n\n\n\n\nקיטלוג לקוחות עם סטטוס תשלומים זהה או לפחות אחד שונה\n\n\n\n\n\n\nSep 19, 2023\n\n\n\n\n\n\n  \n\n\n\n\nזיהוי רצפים בהתחברות\n\n\n\n\n\n\n\nמתקדם\n\n\n\n\nתרגול זיהוי פעולות רצופות\n\n\n\n\n\n\nSep 5, 2023\n\n\n\n\n\n\n  \n\n\n\n\nדירוג שורות בלי פונקצית חלון\n\n\n\n\n\n\n\nמתקדם\n\n\n\n\nיצירת דירוג שורות בתוך קבוצה בלי שימוש בפונקציית חלון\n\n\n\n\n\n\nAug 1, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "questions/1-consecutive-actions/index.html",
    "href": "questions/1-consecutive-actions/index.html",
    "title": "זיהוי רצפים בהתחברות",
    "section": "",
    "text": "ברוכים הבאים לתרגיל הראשון בניוזלטר!"
  },
  {
    "objectID": "questions/1-consecutive-actions/index.html#הדאטה",
    "href": "questions/1-consecutive-actions/index.html#הדאטה",
    "title": "זיהוי רצפים בהתחברות",
    "section": "הדאטה",
    "text": "הדאטה\nהתרגיל יורכב משתי שאלות. בטבלה למטה ניתן לראות ניסיונות התחברות של יוזרים (success / fail) בנקודות זמן שונות.\n\nSELECT TOP 10 * FROM LOGINS;\n\n\nDisplaying records 1 - 10\n\n\nuser_id\nlogin_date\nlogin\n\n\n\n\n3\n2022-08-12\nsuccess\n\n\n4\n2022-08-26\nsuccess\n\n\n5\n2022-07-17\nsuccess\n\n\n5\n2022-11-02\nsuccess\n\n\n2\n2023-06-07\nsuccess\n\n\n1\n2023-05-07\nsuccess\n\n\n5\n2023-04-28\nfail\n\n\n3\n2023-04-26\nsuccess\n\n\n2\n2023-02-05\nsuccess\n\n\n5\n2022-12-22\nfail"
  },
  {
    "objectID": "questions/1-consecutive-actions/index.html#שאלות",
    "href": "questions/1-consecutive-actions/index.html#שאלות",
    "title": "זיהוי רצפים בהתחברות",
    "section": "שאלות",
    "text": "שאלות\n\nשאלה 1\nעבור כל יוזר החזירו את רצף הצלחות התחברות הגדול ביותר.\nלדוג’, עבור יוזר 2 עם ההתחברויות הבאות:\n\n\n\n\n\n\n\nנחזיר את הרשומה הבאה (שכן ניתן לראות למעלה שיש לו רצף של 6 הצלחות התחברות כמספר הגבוה ביותר):\n\n\n\n1 records\n\n\nuser_id\nmost_consecutive_logins\n\n\n\n\n2\n6\n\n\n\n\n\n\n\nשאלה 2\nברגע שיוזרים נכשלים בהתחברות שלוש פעמים באופן רצוף החשבון שלהם ננעל. עבור כל יוזר עם שלוש כשלונות התחברות או יותר, החזירו את התאריך (login_date) בו הוא קיבל לראשונה את הכשלון השלישי באופן רצוף.\nלדוג’, עבור יוזר 1:\n\nSELECT TOP 7 * FROM LOGINS\nwhere user_id = 1\norder by login_date;\n\n\n7 records\n\n\nuser_id\nlogin_date\nlogin\n\n\n\n\n1\n2022-07-09\nfail\n\n\n1\n2022-07-15\nfail\n\n\n1\n2022-07-20\nsuccess\n\n\n1\n2022-08-12\nfail\n\n\n1\n2022-08-15\nfail\n\n\n1\n2022-08-22\nfail\n\n\n1\n2022-09-13\nsuccess\n\n\n\n\n\nניתן לראות שבניסיון התחברות ה-4, 5, ו-6 הוא נכשל לראשונה לפחות שלוש פעמים. לכן נחזיר עבורו את הערך 2022-08-22.\n\n\n\n1 records\n\n\nuser_id\nFIRST_3rd_failed_login\n\n\n\n\n1\n2022-08-22"
  },
  {
    "objectID": "questions/1-consecutive-actions/index.html#יצירת-הטבלה",
    "href": "questions/1-consecutive-actions/index.html#יצירת-הטבלה",
    "title": "זיהוי רצפים בהתחברות",
    "section": "יצירת הטבלה",
    "text": "יצירת הטבלה\nמוזמנים להשתמש בקוד הבא ליצירת טבלה (יש סימן להעתקה בצד ימין למעלה של המלבן כשמעבירים את העכבר מעליו):\n\n\n--drop table if exists logins; /* Drop with caution */\n\ncreate table logins (\n    user_id INT,\n    login_date DATE,\n    login VARCHAR(50)\n);\ninsert into logins (user_id, login_date, login) values (3, '8/12/2022', 'success');\ninsert into logins (user_id, login_date, login) values (4, '8/26/2022', 'success');\ninsert into logins (user_id, login_date, login) values (5, '7/17/2022', 'success');\ninsert into logins (user_id, login_date, login) values (5, '11/2/2022', 'success');\ninsert into logins (user_id, login_date, login) values (2, '6/7/2023', 'success');\ninsert into logins (user_id, login_date, login) values (1, '5/7/2023', 'success');\ninsert into logins (user_id, login_date, login) values (5, '4/28/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '4/26/2023', 'success');\ninsert into logins (user_id, login_date, login) values (2, '2/5/2023', 'success');\ninsert into logins (user_id, login_date, login) values (5, '12/22/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '4/22/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '6/29/2023', 'success');\ninsert into logins (user_id, login_date, login) values (3, '4/19/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '4/6/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '4/16/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '5/22/2023', 'success');\ninsert into logins (user_id, login_date, login) values (5, '3/10/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '6/23/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '1/18/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '4/27/2023', 'success');\ninsert into logins (user_id, login_date, login) values (5, '11/6/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '11/18/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '9/17/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '11/14/2022', 'success');\ninsert into logins (user_id, login_date, login) values (3, '7/23/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '9/13/2022', 'success');\ninsert into logins (user_id, login_date, login) values (2, '7/3/2022', 'success');\ninsert into logins (user_id, login_date, login) values (1, '12/9/2022', 'success');\ninsert into logins (user_id, login_date, login) values (4, '4/3/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '10/11/2022', 'success');\ninsert into logins (user_id, login_date, login) values (4, '3/16/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '1/10/2023', 'success');\ninsert into logins (user_id, login_date, login) values (3, '12/3/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '7/2/2022', 'success');\ninsert into logins (user_id, login_date, login) values (1, '10/11/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '2/24/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '9/11/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '4/11/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '6/3/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '1/30/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '10/21/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '7/9/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '8/12/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '5/30/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '8/11/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '10/22/2022', 'success');\ninsert into logins (user_id, login_date, login) values (3, '1/6/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '11/10/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '4/2/2023', 'success');\ninsert into logins (user_id, login_date, login) values (2, '7/17/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '8/6/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '1/11/2023', 'success');\ninsert into logins (user_id, login_date, login) values (2, '2/20/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '1/9/2023', 'success');\ninsert into logins (user_id, login_date, login) values (3, '1/3/2023', 'success');\ninsert into logins (user_id, login_date, login) values (2, '4/17/2023', 'success');\ninsert into logins (user_id, login_date, login) values (5, '3/7/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '6/26/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '6/30/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '2/1/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '3/26/2023', 'success');\ninsert into logins (user_id, login_date, login) values (5, '11/13/2022', 'success');\ninsert into logins (user_id, login_date, login) values (5, '8/11/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '1/30/2023', 'success');\ninsert into logins (user_id, login_date, login) values (3, '12/2/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '9/27/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '10/26/2022', 'success');\ninsert into logins (user_id, login_date, login) values (2, '2/23/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '12/25/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '8/22/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '5/27/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '8/17/2022', 'success');\ninsert into logins (user_id, login_date, login) values (2, '10/2/2022', 'success');\ninsert into logins (user_id, login_date, login) values (1, '7/15/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '2/6/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '6/5/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (1, '8/15/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '8/3/2022', 'success');\ninsert into logins (user_id, login_date, login) values (4, '12/17/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '9/11/2022', 'success');\ninsert into logins (user_id, login_date, login) values (5, '7/6/2022', 'success');\ninsert into logins (user_id, login_date, login) values (5, '1/14/2023', 'success');\ninsert into logins (user_id, login_date, login) values (1, '11/4/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '11/18/2022', 'success');\ninsert into logins (user_id, login_date, login) values (2, '12/17/2022', 'success');\ninsert into logins (user_id, login_date, login) values (4, '5/2/2023', 'success');\ninsert into logins (user_id, login_date, login) values (5, '8/14/2022', 'success');\ninsert into logins (user_id, login_date, login) values (1, '7/20/2022', 'success');\ninsert into logins (user_id, login_date, login) values (2, '10/27/2022', 'success');\ninsert into logins (user_id, login_date, login) values (2, '2/24/2023', 'success');\ninsert into logins (user_id, login_date, login) values (5, '9/17/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '10/5/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (5, '1/12/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '4/30/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '6/14/2023', 'success');\ninsert into logins (user_id, login_date, login) values (2, '10/5/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (3, '7/24/2022', 'fail');\ninsert into logins (user_id, login_date, login) values (4, '6/3/2023', 'fail');\ninsert into logins (user_id, login_date, login) values (2, '11/27/2022', 'success');\ninsert into logins (user_id, login_date, login) values (1, '3/15/2023', 'success');\n\nבהצלחה!"
  },
  {
    "objectID": "questions/1-consecutive-actions/index.html#תשובות",
    "href": "questions/1-consecutive-actions/index.html#תשובות",
    "title": "זיהוי רצפים בהתחברות",
    "section": "תשובות",
    "text": "תשובות\n\nסרטון הסבר\n\n\n\n1.\n\n\nהצג קוד\n\n\nWITH GROUPS AS (\n  SELECT user_id,\n  login,\n  login_date,\n    ROW_NUMBER() OVER(PARTITION BY user_id order by login_date) - ROW_NUMBER() OVER(PARTITION BY user_id, LOGIN order by login_date asc) as grp\n  FROM LOGINS\n),\n\nlogin_ranks as (\n  SELECT user_id,\n    COUNT(*) AS most_consecutive_logins,\n    ROW_NUMBER() OVER(partition by user_id ORDER BY count(*) desc) as rnk\n  FROM GROUPS\n  where login = 'success'\n  GROUP BY user_id,\n    GRP\n  )\n  \nSELECT user_id,\n  most_consecutive_logins\nFROM LOGIN_RANKS\nWHERE RNK = 1\n\n\n\n\n\n5 records\n\n\nuser_id\nmost_consecutive_logins\n\n\n\n\n1\n1\n\n\n2\n6\n\n\n3\n2\n\n\n4\n1\n\n\n5\n2\n\n\n\n\n\n\n\n2.\n\n\nהצג קוד\n\n\nWITH GROUPS AS (\n  SELECT user_id,\n  login,\n  login_date,\n    ROW_NUMBER() OVER(PARTITION BY user_id order by login_date) - ROW_NUMBER() OVER(PARTITION BY user_id, LOGIN order by login_date asc) as grp\n  FROM LOGINS\n),\n\ngrp_stamps as (\nSELECT user_id,\n  login_date,\n  rn_within_group = ROW_NUMBER() OVER(PARTITION BY user_id, GRP order by grp, login_date)\nFROM GROUPS\nwhere login = 'fail'\n)\n\nselect user_id, \n  min(login_date) AS FIRST_3rd_failed_login\nfrom grp_stamps\nWHERE rn_within_group = 3\nGROUP BY user_id\n\n\n\n\n\n5 records\n\n\nuser_id\nFIRST_3rd_failed_login\n\n\n\n\n1\n2022-08-22\n\n\n2\n2022-09-17\n\n\n3\n2023-04-19\n\n\n4\n2022-12-25\n\n\n5\n2022-10-05"
  },
  {
    "objectID": "website.html",
    "href": "website.html",
    "title": "אודות האתר",
    "section": "",
    "text": "היי!\nברוכים הבאים לאתר שאילתות מהחיים. בבלוג/אוסף של שאלות אני מרכז מקרים מעניינים שיצא לי להתקל בהם במסגרת העבודה. לרוב זה יהיה משהו שפתרתי ואחשוב לעצמי “מגניב! בא לי שעוד אנשים יתנסו בזה” ואעלה את השאלה לפה כדי שתוכלו לנסות לפתור לבד, ולהשוות לפתרון שלי. כמובן כל הדאטה עובר איזשהי אנונימיזציה כך שלא יהיו פרטים מזהים.\nכל שאלה תפורסם עם דאטה לתרגול בסביבה עצמית (אצלכם במחשב). ניתן יהיה להעתיק את הקוד; כמובן שהרצתו היא באחריותכם בלבד. ברגע ששאלה חדשה תצא אעדכן את דרכי הפתרון לשאלה מהשבוע הקודם. על חלק מהשאלות אענה גם בפורמט של סרטון.\nלצערי, המון מעבודת האנליסט לא קיימת בבלוג הזה, וזה שאילת השאלות האנליטיות שיביאו אותנו לכתוב את הקוד שיתן לנו את הדאטה שאנחנו צריכים. עם זאת, אני מאמין שהאתגרים הללו יוכלו לעזור לכם לתרגל בעצמכם ובכך להתכונן למשרה הראשונה/הבאה. חלק מהשאלות יהיו לכם קלות, חלק אולי קשות; מקווה כי מכולם תלמדו!\nהתרגילים מחולקים לשתי רמות קושי שונות: מתקדם ו-בסיסי. אלה תגיות שתוכלו לראות בעמוד הראשי ולסנן שאלות לפיהן. שאלות עם התגית ‘בסיסי’ לא בהכרח קלות למי שכרגע לומד את השפה; הן בסיסיות במובן שהן עולות הרבה בשגרת העבודה שלי. אלה לדעתי גם שאלות שהייתי שואל בריאיון עבודה כדי לסמן וי שהאנליסט יודע SQL. שאלות עם תגית מתקדם הן יותר קשות ונדירות, כאלה שאני נתקל בהן אחת לכמה חודשים.\nאת האתר הרמתי באמצעות Quarto, שזה בגדול פלטפורמה בקוד פתוח לפרסום של דברים, שווה לנסות :)\nמוזמנים להירשם לניוזלטר ולקבל תזכורת כשיוצאת שאלה ויחד איתה הפתרון לשאלה הקודמת. ואם ממש אהבתם/זה עזר לכם מוזמנים עוד יותר לתמוך בי :)\n\n\n\n\n      \n\n    \n        \n            הירשמו וקבלו עידכונים על שאלות חדשות"
  },
  {
    "objectID": "questions/2-identical-different-payments/index.html",
    "href": "questions/2-identical-different-payments/index.html",
    "title": "אפיון תשלומים זהים או שונים",
    "section": "",
    "text": "ברוכים הבאים לתרגיל השני!"
  },
  {
    "objectID": "questions/2-identical-different-payments/index.html#הדאטה",
    "href": "questions/2-identical-different-payments/index.html#הדאטה",
    "title": "אפיון תשלומים זהים או שונים",
    "section": "הדאטה",
    "text": "הדאטה\nבטבלה למטה ניתן לראות פירוט תשלומים של יוזרים:\n\nSELECT TOP 10 *\nFROM payments_ag_2;\n\n\nDisplaying records 1 - 10\n\n\nuser_id\ndate\nstatus\namount\n\n\n\n\n1\n2023-06-01\nLoad\n234\n\n\n1\n2023-06-14\nCancel\n42\n\n\n1\n2023-06-16\nLoad\n52\n\n\n1\n2023-06-22\nLoad\n6\n\n\n1\n2023-06-23\nLoad\n36\n\n\n1\n2023-06-24\nPending\n74\n\n\n2\n2023-06-03\nLoad\n58\n\n\n2\n2023-06-05\nLoad\n33\n\n\n2\n2023-06-09\nLoad\n65\n\n\n2\n2023-06-10\nLoad\n74"
  },
  {
    "objectID": "questions/2-identical-different-payments/index.html#שאלה",
    "href": "questions/2-identical-different-payments/index.html#שאלה",
    "title": "אפיון תשלומים זהים או שונים",
    "section": "שאלה",
    "text": "שאלה\nעבור כל יוזר החזר טבלה עם מספר התשלומים שהוא קיבל, עמודה המציינת האם כל התשלומים שהוא קיבל הם עם סטטוס ‘Load’ (1 כל התשלומים עם הסטטוס הזה, 0 לא), האם מספר התשלומים שנטענו היה גדול ממספר התשלומים שבוטלו (1 כן, 0 לא) והאם יש לו לפחות תשלום אחד שהוא ‘Pending’ (1 כן, 0 לא)\nבהצלחה!"
  },
  {
    "objectID": "questions/2-identical-different-payments/index.html#יצירת-הטבלה",
    "href": "questions/2-identical-different-payments/index.html#יצירת-הטבלה",
    "title": "אפיון תשלומים זהים או שונים",
    "section": "יצירת הטבלה",
    "text": "יצירת הטבלה\n\nDROP table if exists payments_ag_2;\n\n\nCREATE TABLE payments_ag_2\n    ([user_id] int, [date] date, [status] varchar(7), [amount] int)\n;\n    \nINSERT INTO payments_ag_2\n    ([user_id], [date], [status], [amount])\nVALUES\n    (1, '2023-06-01', 'Load', 234),\n    (1, '2023-06-14', 'Cancel', 42),\n    (1, '2023-06-16', 'Load', 52),\n    (1, '2023-06-22', 'Load', 6),\n    (1, '2023-06-23', 'Load', 36),\n    (1, '2023-06-24', 'Pending', 74),\n    (2, '2023-06-03', 'Load', 58),\n    (2, '2023-06-05', 'Load', 33),\n    (2, '2023-06-09', 'Load', 65),\n    (2, '2023-06-10', 'Load', 74),\n    (2, '2023-06-14', 'Load', 98),\n    (2, '2023-06-18', 'Load', 14),\n    (3, '2023-06-01', 'Cancel', 52),\n    (3, '2023-06-04', 'Cancel', 5),\n    (3, '2023-06-07', 'Pending', 99),\n    (4, '2023-06-09', 'Load', 100),\n    (4, '2023-06-10', 'Cancel', 15),\n    (5, '2023-06-15', 'Load', 20),\n    (6, '2023-06-16', 'Pending', 21),\n    (6, '2023-06-16', 'Load', 42)\n;"
  },
  {
    "objectID": "questions/2-identical-different-payments/index.html#תשובה",
    "href": "questions/2-identical-different-payments/index.html#תשובה",
    "title": "אפיון תשלומים זהים או שונים",
    "section": "תשובה",
    "text": "תשובה\n\nסרטון הסבר\n\n\n\nפלט\n\n\nהצג קוד\n\n\nSELECT USER_ID,\n    COUNT(*) AS N_PAYMENTS,\n    CASE WHEN SUM(CASE WHEN STATUS = 'LOAD' THEN 1 ELSE 0 END) = COUNT(*) THEN 1 ELSE 0 END AS ALL_LOADED,\n    CASE WHEN COUNT(CASE WHEN STATUS = 'LOAD' THEN 1 END) &gt; COUNT(CASE WHEN STATUS = 'CANCEL' THEN 1 END) THEN 1 ELSE 0 END AS more_loaded_than_failed,\n    MAX(CASE WHEN STATUS = 'PENDING' THEN 1 ELSE 0 END) AS HAS_PENDING_PAYMENT\nFROM payments_ag_2\nGROUP BY USER_ID\n\n\n\n\n\n6 records\n\n\n\n\n\n\n\n\n\nUSER_ID\nN_PAYMENTS\nALL_LOADED\nmore_loaded_than_failed\nHAS_PENDING_PAYMENT\n\n\n\n\n1\n6\n0\n1\n1\n\n\n2\n6\n1\n1\n0\n\n\n3\n3\n0\n0\n1\n\n\n4\n2\n0\n0\n0\n\n\n5\n1\n1\n1\n0\n\n\n6\n2\n0\n1\n1"
  },
  {
    "objectID": "questions/3-ranking-without-window-function/index.html",
    "href": "questions/3-ranking-without-window-function/index.html",
    "title": "דירוג שורות בלי פונקצית חלון",
    "section": "",
    "text": "ברוכים הבאים לתרגיל השלישי!\nהאמת זו לא ממש שאלה שנדרשתי לה בעבודה אלא שאלה שעלתה בקבוצות פייסבוק לאנליסטים ואיציק בן-גן דן בה גם בספר שלו על פונקציות חלון.\nאומנם ברוב המקרים תוכלו להשתמש בפונקצית חלון, התרגול דורש מאיתנו לחשוב מה בפועל קורה בפונקציית דירוג ובכך לשחזר אותה בלי להשתמש בפונקציית חלון."
  },
  {
    "objectID": "questions/3-ranking-without-window-function/index.html#הדאטה",
    "href": "questions/3-ranking-without-window-function/index.html#הדאטה",
    "title": "דירוג שורות בלי פונקצית חלון",
    "section": "הדאטה",
    "text": "הדאטה\nהאמת זו לא ממש שאלה שנדרשתי לה בעבודה אלא שאלה שעלתה בקבוצות פייסבוק לאנליסטים ואיציק בן גן דן בה גם בספר שלו על פונקציות חלון.\nאומנם ברוב הגדול של הפעמים תוכלו להשתמש בפונקצית חלון, התרגול דורש מאיתנו לחשוב מה קורה בפונקציית דירוג וכך לשחזר אותה רק בלי להשתמש בפונקציית חלון"
  },
  {
    "objectID": "questions/3-ranking-without-window-function/index.html#שאלה",
    "href": "questions/3-ranking-without-window-function/index.html#שאלה",
    "title": "דירוג שורות בלי פונקצית חלון",
    "section": "שאלה",
    "text": "שאלה\nללא שימוש בפונקצית חלון, צור עמודה חדשה שמדרגת את השורות לפי מכירות (amount) באותה שנה (sale_year), בדומה לפונקציית DESNE_RANK(). כלומר, בהינתן תיקו בהיררכיה, ערכים זהים יקבלו את אותו דירוג ואילו הערכים הבאים בסדר יקבלו ערך אחד מעל הערך הקודם שהיה בתיקו.\nבהצלחה!"
  },
  {
    "objectID": "questions/3-ranking-without-window-function/index.html#יצירת-הטבלה",
    "href": "questions/3-ranking-without-window-function/index.html#יצירת-הטבלה",
    "title": "דירוג שורות בלי פונקצית חלון",
    "section": "יצירת הטבלה",
    "text": "יצירת הטבלה\n\nDROP TABLE IF EXISTS Sales_ag;\n\nCREATE TABLE sales_ag (\n    year INT,\n    category varchar(15),\n    amount INT\n)\n\n\nINSERT into Sales_ag (year, category, amount) values (2000, 'Automotive', 89);\ninsert into Sales_ag (year, category, amount) values (2000, 'Computers', 59);\ninsert into Sales_ag (year, category, amount) values (2000, 'Books', 19);\ninsert into Sales_ag (year, category, amount) values (2000, 'Movies', 74);\ninsert into Sales_ag (year, category, amount) values (2000, 'Garden', 74);\ninsert into Sales_ag (year, category, amount) values (2001, 'Clothing', 49);\ninsert into Sales_ag (year, category, amount) values (2001, 'Computers', 53);\ninsert into Sales_ag (year, category, amount) values (2001, 'Automotive', 65);\ninsert into Sales_ag (year, category, amount) values (2001, 'Garden', 24);\ninsert into Sales_ag (year, category, amount) values (2001, 'Movies', 39);"
  },
  {
    "objectID": "questions/3-ranking-without-window-function/index.html#תשובה",
    "href": "questions/3-ranking-without-window-function/index.html#תשובה",
    "title": "דירוג שורות בלי פונקצית חלון",
    "section": "תשובה",
    "text": "תשובה\nדרך הפתרון תפורסם עם השאלה הבאה ב-17.10\n\n\n\n\n\n\n\n\n\ncustom_dense_rank\namount\ncategory\nsale_year\n\n\n\n\n1\n89\nAutomotive\n2000\n\n\n2\n74\nMovies\n2000\n\n\n2\n74\nGarden\n2000\n\n\n3\n59\nComputers\n2000\n\n\n4\n19\nBooks\n2000\n\n\n1\n65\nAutomotive\n2001\n\n\n2\n53\nComputers\n2001\n\n\n3\n49\nClothing\n2001\n\n\n4\n39\nMovies\n2001\n\n\n5\n24\nGarden\n2001"
  }
]